apiVersion: v1
kind: Secret
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
type: Opaque
data:
{{ include "appcredentials" . | indent 2 }}
{{- $currentScope := . }}
{{- range $path, $bytes := .Files.Glob "secrets/*" }}
{{- with $currentScope }}
{{ printf ( replace "secrets/" "" $path ) | indent 2 }}: {{ tpl (.Files.Get $path) $currentScope | b64enc }}  
{{- end }}
{{- end }}
---
{{- if .Values.secrets.pullSecret }}
{{ $auth := b64enc (printf "%s:%s" "_json_key" (.Files.Get (printf "secrets/%s" .Values.secrets.pullSecret))) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "fullname" . }}-dockerconfig-json
  creationTimestamp: null
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: {{ printf `{"auths": {"%s": {"auth": "%s"}}}` .Values.image.registry $auth | b64enc }}
{{- end }}
---
{{- if .Values.secrets.tls }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "fullname" . }}-tls
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
type: Opaque
data:
  tls.key: {{ .Files.Get (printf "secrets/%s" .Values.secrets.tls.key) | b64enc }}
  tls.crt: {{ .Files.Get (printf "secrets/%s" .Values.secrets.tls.crt) | b64enc }}
{{- end }}
