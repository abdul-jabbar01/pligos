{{- $secretsExists := .Values.secretsExist }}
{{- $envExists := .Values.envExist }}
{{- $release := .Release.Name }}
{{- $name := .Chart.Name }}
{{- $files := .Files }}
{{- $context := . }}
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "name" . }}
    helm.sh/chart: {{ include "chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      volumes:
{{ if .Values.mounts }}{{ toYaml .Values.mounts | indent 8 }}{{ end }}
        - name: config
          configMap:
            name: {{ template "fullname" . }}
        - name: secrets
          secret:
            secretName: {{ template "fullname" . }}
      {{- if $context.Values.secrets.pullSecret }}
      imagePullSecrets:
        - name: {{ template "fullname" $context }}-dockerconfig-json
      {{- end }}
      containers:
        {{- range .Values.containers }}
        - name: {{default .name $name }}
          {{- if $envExists }}
          envFrom:
            - configMapRef:
                name: {{ template "fullname" $context }}-env
          {{- end }}
          volumeMounts:
{{ if .mounts }}{{ toYaml .mounts | indent 12 }}{{ end }}
            - name: config
              mountPath: /etc/{{ template "name" $context }}
            - name: secrets
              mountPath: /etc/secrets
          command:
          {{- if eq "script" .command.type }}
          {{- range  .command.interpreter }}
            - "{{ . }}"
          {{- end }}
            - |
{{ tpl ($files.Get .command.fileName ) $context | indent 14 }}
          {{- else }}            
{{ toYaml .command.command | indent 14 }}
          {{- end }}
          image: "{{ .image.registry }}/{{ .image.repository }}:{{ .image.tag }}"
          ports:
          {{- range .routes }}
            - name: {{ .name }}
              containerPort: {{ .containerPort }}
              protocol: {{ .protocol }}
          {{- end }}
{{ toYaml .probes | indent 10 }}
          resources:
{{ toYaml .resources | indent 12 }}
        {{- end }}

    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
